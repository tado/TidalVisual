import Sound.Tidal.OscStream

let openFrameworks = Shape {
      params = [ S "s" Nothing,
                 F "vel" (Just 0.5),
                 F "gain" (Just 1.0),
                 F "x" (Just 0.0),
                 F "y" (Just 0.0),
                 F "radius" (Just 1.0),
                 F "smooth" (Just 0.0),
                 F "r" (Just 1.0),
                 F "g" (Just 1.0),
                 F "b" (Just 1.0),
                 I "l" (Just 0)
               ],
      cpsStamp = False,
      latency = 0.0
      }
    openFrameworksSlang = OscSlang {
        path = "/ofplay",
        timestamp = NoStamp,
        namedParams = True,
        preamble = []
        }
    openFrameworksStream = do
        s <- makeConnection "127.0.0.1" 8000 openFrameworksSlang
        stream (Backend s $ (\_ _ _ -> return ())) openFrameworks
    s = makeS openFrameworks "s"
    vel = makeF openFrameworks "vel"
    gain = makeF openFrameworks "gain"
    x = makeF openFrameworks "x"
    y = makeF openFrameworks "y"
    radius = makeF openFrameworks "radius"
    smooth = makeF openFrameworks "smooth"    
    r = makeF openFrameworks "r"
    g = makeF openFrameworks "g"
    b = makeF openFrameworks "b"

o1 <- openFrameworksStream

o2 <- openFrameworksStream

o3 <- openFrameworksStream

o4 <- openFrameworksStream

