import Sound.Tidal.OscStream

let openFrameworks = Shape {
      params = [ S "s" Nothing,
                 F "vel" (Just 0.5),
                 F "gain" (Just 1),
                 I "layer" (Just 0)
               ],
      cpsStamp = False,
      latency = 0
    }
    openFrameworksSlang = OscSlang {path = "/play",
                            timestamp = NoStamp,
                            namedParams = False,
                            preamble = []
                           }
    openFrameworksStream = do
      s <- makeConnection "127.0.0.1" 8000 openFrameworksSlang
      stream (Backend s $ (\_ _ _ -> return ())) openFrameworks
    s = makeS openFrameworks "s"
    vel = makeF openFrameworks "vel"
    gain = makeF openFrameworks "gain"
    layer = makeI openFrameworks "layer"

o1 <- openFrameworksStream

cps(120/120)

o1 $ s "blank"

o1 $ s "circle*8" # vel (rand)

o1 $ s "[blue [red blue green]*2]*2" # gain "[1.0 0.0]*16"

o1 $ s "flower*4 planes*4 tunnel*4" # vel (rand)

o1 $ s "[planes*4 [tunnel*2 flower*2] blank]"  # vel (scale 0.5 1.0 $ rand)

o1 $ s "[[flower*4 spiral*3 water*4] [ripple*4 stripe*3]] search]"  # vel (scale 0.5 1.0 $ rand)

o1 $ s "[blue planes blank sparkle blank]*3"

o1 $ s "[sparkle planes]*3 [blue planes]*4"

o1 $ s "[spider fur ripple]*2"

o1 $ s "[planes [tunnel flower] blank blue]*2 [[red green] [planes blank sparkle] blank]"

o1 silence




